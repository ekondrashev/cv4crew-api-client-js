/**
 * CV4CREW
 * API to fill CV for crewing agencies
 *
 * OpenAPI spec version: 1.0.0
 * Contact: eugene.kondrashev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Birth', 'model/Citizenship', 'model/Genders', 'model/Marital', 'model/Military', 'model/Names', 'model/Nationalities', 'model/Residence'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Birth'), require('./Citizenship'), require('./Genders'), require('./Marital'), require('./Military'), require('./Names'), require('./Nationalities'), require('./Residence'));
  } else {
    // Browser globals (root is window)
    if (!root.Cv4Crew) {
      root.Cv4Crew = {};
    }
    root.Cv4Crew.Personal = factory(root.Cv4Crew.ApiClient, root.Cv4Crew.Birth, root.Cv4Crew.Citizenship, root.Cv4Crew.Genders, root.Cv4Crew.Marital, root.Cv4Crew.Military, root.Cv4Crew.Names, root.Cv4Crew.Nationalities, root.Cv4Crew.Residence);
  }
}(this, function(ApiClient, Birth, Citizenship, Genders, Marital, Military, Names, Nationalities, Residence) {
  'use strict';



  /**
   * The Personal model module.
   * @module model/Personal
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Personal</code>.
   * @alias module:model/Personal
   * @class
   * @param names {module:model/Names} 
   * @param gender {module:model/Genders} 
   * @param birth {module:model/Birth} 
   * @param nationality {module:model/Nationalities} 
   * @param residence {module:model/Residence} 
   * @param citizenship {module:model/Citizenship} 
   * @param marital {module:model/Marital} 
   * @param military {module:model/Military} 
   */
  var exports = function(names, gender, birth, nationality, residence, citizenship, marital, military) {
    var _this = this;

    _this['names'] = names;
    _this['gender'] = gender;
    _this['birth'] = birth;
    _this['nationality'] = nationality;
    _this['residence'] = residence;
    _this['citizenship'] = citizenship;
    _this['marital'] = marital;
    _this['military'] = military;
  };

  /**
   * Constructs a <code>Personal</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Personal} obj Optional instance to populate.
   * @return {module:model/Personal} The populated <code>Personal</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('names')) {
        obj['names'] = Names.constructFromObject(data['names']);
      }
      if (data.hasOwnProperty('gender')) {
        obj['gender'] = Genders.constructFromObject(data['gender']);
      }
      if (data.hasOwnProperty('birth')) {
        obj['birth'] = Birth.constructFromObject(data['birth']);
      }
      if (data.hasOwnProperty('nationality')) {
        obj['nationality'] = Nationalities.constructFromObject(data['nationality']);
      }
      if (data.hasOwnProperty('residence')) {
        obj['residence'] = Residence.constructFromObject(data['residence']);
      }
      if (data.hasOwnProperty('citizenship')) {
        obj['citizenship'] = Citizenship.constructFromObject(data['citizenship']);
      }
      if (data.hasOwnProperty('marital')) {
        obj['marital'] = Marital.constructFromObject(data['marital']);
      }
      if (data.hasOwnProperty('military')) {
        obj['military'] = Military.constructFromObject(data['military']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/Names} names
   */
  exports.prototype['names'] = undefined;
  /**
   * @member {module:model/Genders} gender
   */
  exports.prototype['gender'] = undefined;
  /**
   * @member {module:model/Birth} birth
   */
  exports.prototype['birth'] = undefined;
  /**
   * @member {module:model/Nationalities} nationality
   */
  exports.prototype['nationality'] = undefined;
  /**
   * @member {module:model/Residence} residence
   */
  exports.prototype['residence'] = undefined;
  /**
   * @member {module:model/Citizenship} citizenship
   */
  exports.prototype['citizenship'] = undefined;
  /**
   * @member {module:model/Marital} marital
   */
  exports.prototype['marital'] = undefined;
  /**
   * @member {module:model/Military} military
   */
  exports.prototype['military'] = undefined;



  return exports;
}));


